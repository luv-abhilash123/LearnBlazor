<div class="bg-light border m-1 col-5" @onclick="(args)=>SelectedProductUpdated(args,product.Name)">
    <h4 class="text-secondary">Product - @product.Id</h4>
    <input type="checkbox" @onchange="FavoriteUpdated" />Add to favourite<br /><br />
    <p>Name - @product.Name</p>
    <br />
    <p> Show Properties :</p>
    <input type="checkbox" @bind="product.IsActive" />
    @if (product.IsActive)
    {
        foreach (var prodProp in product.ProductProperties)
        {
            <p>@prodProp.Key - @prodProp.Value</p>
        }
    }
    <br /> 
    <_DeleteButtonComponent ProductId="@product.Id"></_DeleteButtonComponent>
   
   
</div>

@code {
    [Parameter]
    public Product product { get; set; } 

    [Parameter]
    public EventCallback<bool> OnFavoriteUpdated{ get; set; }

    [Parameter]
    public EventCallback<string> OnSelectedProductChange{ get; set; }

    private async Task FavoriteUpdated(ChangeEventArgs args)
    {
        await OnFavoriteUpdated.InvokeAsync((bool)args.Value);
    }

    private async Task SelectedProductUpdated(MouseEventArgs args,string productName)
    {
        await OnSelectedProductChange.InvokeAsync(productName);
    }
}