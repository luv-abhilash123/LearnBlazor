@page "/blazorjs"
@inject IJSRuntime _JSRuntime

<h3>Blazor JS</h3>
<div class="row">
    <button class="btn btn-secondary" @onclick="TestConfirmBox">Test Confrim Button</button>
</div>
<div class="row">
    @if (ConfirmResult)
    {
        <p>Confirmation has been made.</p>
    }
    else
    {
        <p>Pending Confirmation.</p>

    }
</div>
<div>
    <button class="btn btn-success" style="width:200px;" @onclick="ToastrSuccess">Toastr Success</button>
    <button class="btn btn-danger" style="width:200px;" @onclick="ToastrError">Toastr Faliure</button>

</div>

<div>
    <button class="btn btn-success" style="width:200px;" @onclick="SweetalertSuccess">Sweet Alert Success</button>
    <button class="btn btn-danger" style="width:200px;" @onclick="SweetalertError">Sweet AlertFaliure</button>

</div>

@code {
    private string ConfrimMessage = "Are you sure you want to click here?";
    private bool ConfirmResult{ get; set; }
    private async Task TestConfirmBox()
    {
        ConfirmResult=await _JSRuntime.InvokeAsync<bool>("confirm", ConfrimMessage);
    }

    public async Task ToastrSuccess()
    {
        // await _JSRuntime.InvokeVoidAsync("showToastr", "success", "Success Notification");
        await _JSRuntime.ToastrSuccess("Success Notification");
    }

    public async Task ToastrError()
    {
        // await _JSRuntime.InvokeVoidAsync("showToastr", "error", "Error Notification");
        await _JSRuntime.ToastrError("Error Notification");
    }

    public async Task SweetalertSuccess()
    {
        await _JSRuntime.InvokeVoidAsync("showSweetAlert", "success", "Success Notification");
        
    }
    public async Task SweetalertError()
    {
        await _JSRuntime.InvokeVoidAsync("showSweetAlert", "error", "Error Notification");

    }

}
